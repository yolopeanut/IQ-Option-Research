#!/usr/bin/python

from math import tanh

def expression (Open_lag_1, High_lag_1, Low_lag_1, Close_lag_1, Open_lag_2, High_lag_2, Low_lag_2, Close_lag_2, Open_ahead_1, High_ahead_1, Low_ahead_1) : 

    scaled_Open_lag_1= (Open_lag_1-1.18424)/0.00286609
    scaled_High_lag_1= (High_lag_1-1.18433)/0.00285553
    scaled_Low_lag_1= (Low_lag_1-1.18416)/0.0028812
    scaled_Close_lag_1= (Close_lag_1-1.18424)/0.00286837
    scaled_Open_lag_2= (Open_lag_2-1.18424)/0.00286821
    scaled_High_lag_2= (High_lag_2-1.18433)/0.0028577
    scaled_Low_lag_2= (Low_lag_2-1.18416)/0.00288343
    scaled_Close_lag_2= (Close_lag_2-1.18424)/0.00287066
    scaled_Open_ahead_1= (Open_ahead_1-1.18424)/0.00287051
    scaled_High_ahead_1= (High_ahead_1-1.18433)/0.00286003
    scaled_Low_ahead_1= (Low_ahead_1-1.18415)/0.00288577
    y_1_1=tanh(0.0110883
                -0.00444978*scaled_Open_lag_1
                +0.00605095*scaled_High_lag_1
                -0.00939683*scaled_Low_lag_1
                -0.00139696*scaled_Close_lag_1
                -0.000748334*scaled_Open_lag_2
                -0.00499004*scaled_High_lag_2
                -0.0142348*scaled_Low_lag_2
                -0.00986024*scaled_Close_lag_2
                +0.0084442*scaled_Open_ahead_1
                -0.0262798*scaled_High_ahead_1
                -0.0296231*scaled_Low_ahead_1)
    y_1_2=tanh(-0.0275997
                -0.0165486*scaled_Open_lag_1
                -0.0108497*scaled_High_lag_1
                -0.00768768*scaled_Low_lag_1
                -0.00229938*scaled_Close_lag_1
                -0.003555*scaled_Open_lag_2
                -0.0003417*scaled_High_lag_2
                -0.00184236*scaled_Low_lag_2
                -0.00363927*scaled_Close_lag_2
                +0.0442268*scaled_Open_ahead_1
                -0.0585974*scaled_High_ahead_1
                -0.0694604*scaled_Low_ahead_1)
    y_1_3=tanh(0.0265592
                -0.0285636*scaled_Open_lag_1
                -0.0194351*scaled_High_lag_1
                -0.0123787*scaled_Low_lag_1
                -0.00280218*scaled_Close_lag_1
                +0.00621405*scaled_Open_lag_2
                -0.00606528*scaled_High_lag_2
                +0.00508047*scaled_Low_lag_2
                +0.000110026*scaled_Close_lag_2
                -0.0723307*scaled_Open_ahead_1
                +0.0875374*scaled_High_ahead_1
                +0.107177*scaled_Low_ahead_1)
    y_1_4=tanh(0.0817535
                +0.0256676*scaled_Open_lag_1
                +0.0280781*scaled_High_lag_1
                +0.00861289*scaled_Low_lag_1
                +0.0111277*scaled_Close_lag_1
                +0.0157839*scaled_Open_lag_2
                +0.0168562*scaled_High_lag_2
                +0.00230784*scaled_Low_lag_2
                +0.0175042*scaled_Close_lag_2
                -0.0190112*scaled_Open_ahead_1
                +0.0691471*scaled_High_ahead_1
                +0.0566823*scaled_Low_ahead_1)
    y_1_5=tanh(0.0949894
                +0.0188421*scaled_Open_lag_1
                +0.0165646*scaled_High_lag_1
                +0.0285758*scaled_Low_lag_1
                +0.0410155*scaled_Close_lag_1
                +0.0374467*scaled_Open_lag_2
                +0.044424*scaled_High_lag_2
                +0.0605044*scaled_Low_lag_2
                +0.0437349*scaled_Close_lag_2
                +0.0727687*scaled_Open_ahead_1
                +0.0214547*scaled_High_ahead_1
                +0.033968*scaled_Low_ahead_1)
    y_1_6=tanh(0.0276728
                -0.0116226*scaled_Open_lag_1
                -0.0103597*scaled_High_lag_1
                -0.00998258*scaled_Low_lag_1
                -0.0105014*scaled_Close_lag_1
                -0.0136305*scaled_Open_lag_2
                -0.00945663*scaled_High_lag_2
                -0.0115685*scaled_Low_lag_2
                -0.00888425*scaled_Close_lag_2
                +0.0058961*scaled_Open_ahead_1
                -0.029592*scaled_High_ahead_1
                -0.0305812*scaled_Low_ahead_1)
    y_1_7=tanh(-0.0858485
                +0.0160751*scaled_Open_lag_1
                +0.0166032*scaled_High_lag_1
                +0.0182567*scaled_Low_lag_1
                +0.0194875*scaled_Close_lag_1
                +0.0188115*scaled_Open_lag_2
                +0.0178094*scaled_High_lag_2
                +0.017939*scaled_Low_lag_2
                +0.0199562*scaled_Close_lag_2
                +0.022362*scaled_Open_ahead_1
                +0.0125902*scaled_High_ahead_1
                +0.0162977*scaled_Low_ahead_1)
    y_1_8=tanh(0.0979856
                -0.0424296*scaled_Open_lag_1
                -0.0469309*scaled_High_lag_1
                -0.037376*scaled_Low_lag_1
                -0.031888*scaled_Close_lag_1
                -0.0320711*scaled_Open_lag_2
                -0.0185064*scaled_High_lag_2
                -0.0166618*scaled_Low_lag_2
                -0.0247759*scaled_Close_lag_2
                -0.00307292*scaled_Open_ahead_1
                -0.0412992*scaled_High_ahead_1
                -0.0516089*scaled_Low_ahead_1)
    y_1_9=tanh(-0.0078449
                -0.00405529*scaled_Open_lag_1
                +0.00295991*scaled_High_lag_1
                -0.0102946*scaled_Low_lag_1
                -0.0096191*scaled_Close_lag_1
                -0.0104179*scaled_Open_lag_2
                -0.00545448*scaled_High_lag_2
                -0.0184155*scaled_Low_lag_2
                -0.0117964*scaled_Close_lag_2
                +0.0202181*scaled_Open_ahead_1
                -0.0443473*scaled_High_ahead_1
                -0.0612943*scaled_Low_ahead_1)
    y_1_10=tanh(-0.0200093
                -0.00860877*scaled_Open_lag_1
                -0.000743906*scaled_High_lag_1
                +0.000107443*scaled_Low_lag_1
                +0.00960676*scaled_Close_lag_1
                +0.00378541*scaled_Open_lag_2
                +0.00913186*scaled_High_lag_2
                -0.00208338*scaled_Low_lag_2
                -0.00773982*scaled_Close_lag_2
                +0.0638127*scaled_Open_ahead_1
                -0.0901438*scaled_High_ahead_1
                -0.104873*scaled_Low_ahead_1)
    y_1_11=tanh(0.0435684
                -0.0235268*scaled_Open_lag_1
                -0.0227442*scaled_High_lag_1
                -0.0231673*scaled_Low_lag_1
                -0.0236862*scaled_Close_lag_1
                -0.0237825*scaled_Open_lag_2
                -0.0255785*scaled_High_lag_2
                -0.0300318*scaled_Low_lag_2
                -0.0261736*scaled_Close_lag_2
                -0.0227371*scaled_Open_ahead_1
                -0.031907*scaled_High_ahead_1
                -0.0356568*scaled_Low_ahead_1)
    y_1_12=tanh(0.045613
                -0.0253094*scaled_Open_lag_1
                -0.0234191*scaled_High_lag_1
                -0.0144665*scaled_Low_lag_1
                -0.00872264*scaled_Close_lag_1
                -8.52175e-05*scaled_Open_lag_2
                +0.00328407*scaled_High_lag_2
                -7.4955e-05*scaled_Low_lag_2
                +0.0028559*scaled_Close_lag_2
                -0.065747*scaled_Open_ahead_1
                +0.0859926*scaled_High_ahead_1
                +0.103397*scaled_Low_ahead_1)
    y_2_1=tanh(0.00643262
                +0.00154892*y_1_1
                +0.00950911*y_1_2
                -0.0148319*y_1_3
                +0.0118619*y_1_4
                +0.0109579*y_1_5
                -0.00268251*y_1_6
                -0.0220104*y_1_7
                -0.00455118*y_1_8
                -0.0116573*y_1_9
                +0.00608305*y_1_10
                -0.0118111*y_1_11
                -0.00868837*y_1_12)
    y_2_2=tanh(-0.0983979
                +0.0849497*y_1_1
                +0.104908*y_1_2
                -0.0957429*y_1_3
                +0.015971*y_1_4
                -0.0264704*y_1_5
                +0.0460697*y_1_6
                +0.0528888*y_1_7
                +0.0417112*y_1_8
                +0.051205*y_1_9
                +0.0396828*y_1_10
                -0.0816566*y_1_11
                -0.0859491*y_1_12)
    y_2_3=tanh(0.110953
                -0.0640844*y_1_1
                -0.100276*y_1_2
                +0.143315*y_1_3
                +0.0863466*y_1_4
                -0.0982506*y_1_5
                -0.03414*y_1_6
                +0.00677347*y_1_7
                -0.0438102*y_1_8
                -0.0707954*y_1_9
                -0.155241*y_1_10
                -0.0132791*y_1_11
                +0.135804*y_1_12)
    y_2_4=tanh(-0.0918082
                +0.0616558*y_1_1
                +0.0984197*y_1_2
                -0.142045*y_1_3
                -0.0807145*y_1_4
                +0.0876811*y_1_5
                +0.0457987*y_1_6
                +7.13067e-05*y_1_7
                +0.0608912*y_1_8
                +0.0801184*y_1_9
                +0.160751*y_1_10
                +0.02195*y_1_11
                -0.145877*y_1_12)
    y_2_5=tanh(-0.00410887
                +0.0146843*y_1_1
                +0.0209445*y_1_2
                -0.0358549*y_1_3
                -0.0680184*y_1_4
                +0.0643128*y_1_5
                +0.0120756*y_1_6
                -0.0123366*y_1_7
                +0.0237514*y_1_8
                +0.0263178*y_1_9
                +0.0530836*y_1_10
                +0.0261906*y_1_11
                -0.0375319*y_1_12)
    y_2_6=tanh(0.0553578
                +0.000226722*y_1_1
                -0.0587731*y_1_2
                +0.085971*y_1_3
                +0.0768224*y_1_4
                -0.0587424*y_1_5
                -0.00902316*y_1_6
                +0.0623492*y_1_7
                -0.0247082*y_1_8
                -0.0290155*y_1_9
                -0.128598*y_1_10
                -0.0441199*y_1_11
                +0.0783684*y_1_12)
    y_3_1=tanh(0.246297
                +0.0023258*y_2_1
                -0.0750398*y_2_2
                +0.131423*y_2_3
                -0.184547*y_2_4
                -0.0272149*y_2_5
                +0.0186303*y_2_6)
    y_3_2=tanh(0.060722
                -0.155874*y_2_1
                -0.0449069*y_2_2
                -0.0489531*y_2_3
                +0.0369104*y_2_4
                -0.109776*y_2_5
                -0.32587*y_2_6)
    y_3_3=tanh(0.145655
                -0.203278*y_2_1
                -0.277024*y_2_2
                +0.324864*y_2_3
                -0.259703*y_2_4
                -0.244334*y_2_5
                -0.0527618*y_2_6)
    scaled_Close_ahead_1=(1.17543
                            +0.00920854*y_3_1
                            -0.0356549*y_3_2
                            +0.0324964*y_3_3)
    (Close_ahead_1) = (scaled_Close_ahead_1)
    
    return Close_ahead_1 
